package {{defaultPackageName}}.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jndi.JndiObjectFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.jta.JtaTransactionManager;

import javax.sql.DataSource;
import java.util.Properties;

@Configuration
public class {{txtFileName}} {

    @Bean
    public PlatformTransactionManager transactionManager() {
        return new JtaTransactionManager();
    }

    @Bean(name = "{{txtDatasourceName}}")
    public DataSource dataSource() {
        JndiObjectFactoryBean jndiObjectFactoryBean = new JndiObjectFactoryBean();
        jndiObjectFactoryBean.setJndiName("{{txtJndiName}}");
        jndiObjectFactoryBean.setResourceRef({{cboResourceRef}});
        
        // Setting up the environment properties for JNDI lookup
        Properties env = new Properties();
        env.put("java.naming.factory.initial", "{{txtInitialFactory}}");
        env.put("java.naming.provider.url", "{{txtProviderUrl}}");
        jndiObjectFactoryBean.setJndiEnvironment(env);
        
        jndiObjectFactoryBean.setProxyInterface(DataSource.class);
        jndiObjectFactoryBean.afterPropertiesSet(); // Ensure the factory bean initializes correctly
        return (DataSource) jndiObjectFactoryBean.getObject();
    }
}
