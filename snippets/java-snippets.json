{
  "eGovFrame Controller": {
    "prefix": "egov-controller",
    "body": [
      "package ${1:package}.web;",
      "",
      "import java.util.List;",
      "import javax.annotation.Resource;",
      "import org.springframework.stereotype.Controller;",
      "import org.springframework.ui.Model;",
      "import org.springframework.ui.ModelMap;",
      "import org.springframework.web.bind.annotation.ModelAttribute;",
      "import org.springframework.web.bind.annotation.RequestMapping;",
      "import org.egovframe.rte.fdl.property.EgovPropertyService;",
      "import org.egovframe.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;",
      "",
      "/**",
      " * @Class Name : ${2:Name}Controller.java",
      " * @Description : ${2:Name} Controller class",
      " * @Modification Information",
      " *",
      " * @author ${3:author}",
      " * @since ${4:date}",
      " * @version 1.0",
      " */",
      "@Controller",
      "public class ${2:Name}Controller {",
      "",
      "    @Resource(name = \"${5:serviceName}\")",
      "    private ${2:Name}Service ${5:serviceName};",
      "    ",
      "    /** EgovPropertyService */",
      "    @Resource(name = \"propertiesService\")",
      "    protected EgovPropertyService propertiesService;",
      "    ",
      "    /**",
      "     * 목록을 조회한다. (paging)",
      "     * @param searchVO - 조회할 정보가 담긴 VO",
      "     * @return \"/${6:path}/${2:Name}List\"",
      "     * @exception Exception",
      "     */",
      "    @RequestMapping(value=\"/${6:path}List.do\")",
      "    public String select${2:Name}List(@ModelAttribute(\"searchVO\") ${2:Name}DefaultVO searchVO, ModelMap model)",
      "            throws Exception {",
      "        ",
      "        /** EgovPropertyService.sample */",
      "        searchVO.setPageUnit(propertiesService.getInt(\"pageUnit\"));",
      "        searchVO.setPageSize(propertiesService.getInt(\"pageSize\"));",
      "        ",
      "        /** pageing */",
      "        PaginationInfo paginationInfo = new PaginationInfo();",
      "        paginationInfo.setCurrentPageNo(searchVO.getPageIndex());",
      "        paginationInfo.setRecordCountPerPage(searchVO.getPageUnit());",
      "        paginationInfo.setPageSize(searchVO.getPageSize());",
      "        ",
      "        searchVO.setFirstIndex(paginationInfo.getFirstRecordIndex());",
      "        searchVO.setLastIndex(paginationInfo.getLastRecordIndex());",
      "        searchVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());",
      "        ",
      "        List<?> ${6:path}List = ${5:serviceName}.select${2:Name}List(searchVO);",
      "        model.addAttribute(\"resultList\", ${6:path}List);",
      "        ",
      "        int totCnt = ${5:serviceName}.select${2:Name}ListTotCnt(searchVO);",
      "        paginationInfo.setTotalRecordCount(totCnt);",
      "        model.addAttribute(\"paginationInfo\", paginationInfo);",
      "        ",
      "        return \"/${6:path}/${2:Name}List\";",
      "    }",
      "    ${0}",
      "}"
    ],
    "description": "Create an eGovFrame Controller class"
  },
  "eGovFrame Service": {
    "prefix": "egov-service",
    "body": [
      "package ${1:package}.service;",
      "",
      "import java.util.List;",
      "",
      "/**",
      " * @Class Name : ${2:Name}Service.java",
      " * @Description : ${2:Name} Business class",
      " * @Modification Information",
      " *",
      " * @author ${3:author}",
      " * @since ${4:date}",
      " * @version 1.0",
      " */",
      "public interface ${2:Name}Service {",
      "    ",
      "    /**",
      "     * ${2:Name} 목록을 조회한다.",
      "     * @param searchVO - 조회할 정보가 담긴 VO",
      "     * @return ${2:Name} 목록",
      "     * @exception Exception",
      "     */",
      "    List<?> select${2:Name}List(${2:Name}DefaultVO searchVO) throws Exception;",
      "    ",
      "    /**",
      "     * ${2:Name} 총 갯수를 조회한다.",
      "     * @param searchVO - 조회할 정보가 담긴 VO",
      "     * @return ${2:Name} 총 갯수",
      "     * @exception Exception",
      "     */",
      "    int select${2:Name}ListTotCnt(${2:Name}DefaultVO searchVO) throws Exception;",
      "    ",
      "    /**",
      "     * ${2:Name}을 등록한다.",
      "     * @param vo - 등록할 정보가 담긴 VO",
      "     * @return 등록 결과",
      "     * @exception Exception",
      "     */",
      "    void insert${2:Name}(${2:Name}VO vo) throws Exception;",
      "    ",
      "    /**",
      "     * ${2:Name}을 수정한다.",
      "     * @param vo - 수정할 정보가 담긴 VO",
      "     * @return void",
      "     * @exception Exception",
      "     */",
      "    void update${2:Name}(${2:Name}VO vo) throws Exception;",
      "    ",
      "    /**",
      "     * ${2:Name}을 삭제한다.",
      "     * @param vo - 삭제할 정보가 담긴 VO",
      "     * @return void",
      "     * @exception Exception",
      "     */",
      "    void delete${2:Name}(${2:Name}VO vo) throws Exception;",
      "    ",
      "    /**",
      "     * ${2:Name}을 조회한다.",
      "     * @param vo - 조회할 정보가 담긴 VO",
      "     * @return 조회한 ${2:Name}",
      "     * @exception Exception",
      "     */",
      "    ${2:Name}VO select${2:Name}(${2:Name}VO vo) throws Exception;",
      "    ${0}",
      "}"
    ],
    "description": "Create an eGovFrame Service interface"
  },
  "eGovFrame ServiceImpl": {
    "prefix": "egov-serviceimpl",
    "body": [
      "package ${1:package}.service.impl;",
      "",
      "import java.util.List;",
      "",
      "import javax.annotation.Resource;",
      "",
      "import org.springframework.stereotype.Service;",
      "",
      "import org.egovframe.rte.fdl.cmmn.EgovAbstractServiceImpl;",
      "import org.egovframe.rte.fdl.idgnr.EgovIdGnrService;",
      "import ${1:package}.service.${2:Name}Service;",
      "import ${1:package}.service.${2:Name}DefaultVO;",
      "import ${1:package}.service.${2:Name}VO;",
      "",
      "/**",
      " * @Class Name : ${2:Name}ServiceImpl.java",
      " * @Description : ${2:Name} Business Implement class",
      " * @Modification Information",
      " *",
      " * @author ${3:author}",
      " * @since ${4:date}",
      " * @version 1.0",
      " */",
      "",
      "@Service(\"${5:serviceName}\")",
      "public class ${2:Name}ServiceImpl extends EgovAbstractServiceImpl implements ${2:Name}Service {",
      "",
      "    @Resource(name=\"${6:daoName}\")",
      "    private ${2:Name}DAO ${6:daoName};",
      "    ",
      "    /** ID Generation */",
      "    @Resource(name = \"${7:egovIdGnrService}\")",
      "    private EgovIdGnrService egovIdGnrService;",
      "",
      "    /**",
      "     * ${2:Name} 목록을 조회한다.",
      "     * @param searchVO - 조회할 정보가 담긴 VO",
      "     * @return ${2:Name} 목록",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public List<?> select${2:Name}List(${2:Name}DefaultVO searchVO) throws Exception {",
      "        return ${6:daoName}.select${2:Name}List(searchVO);",
      "    }",
      "",
      "    /**",
      "     * ${2:Name} 총 갯수를 조회한다.",
      "     * @param searchVO - 조회할 정보가 담긴 VO",
      "     * @return ${2:Name} 총 갯수",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public int select${2:Name}ListTotCnt(${2:Name}DefaultVO searchVO) throws Exception {",
      "        return ${6:daoName}.select${2:Name}ListTotCnt(searchVO);",
      "    }",
      "    ",
      "    /**",
      "     * ${2:Name}을 등록한다.",
      "     * @param vo - 등록할 정보가 담긴 VO",
      "     * @return 등록 결과",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public void insert${2:Name}(${2:Name}VO vo) throws Exception {",
      "        String id = egovIdGnrService.getNextStringId();",
      "        vo.setId(id);",
      "        ${6:daoName}.insert${2:Name}(vo);",
      "    }",
      "",
      "    /**",
      "     * ${2:Name}을 수정한다.",
      "     * @param vo - 수정할 정보가 담긴 VO",
      "     * @return void",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public void update${2:Name}(${2:Name}VO vo) throws Exception {",
      "        ${6:daoName}.update${2:Name}(vo);",
      "    }",
      "",
      "    /**",
      "     * ${2:Name}을 삭제한다.",
      "     * @param vo - 삭제할 정보가 담긴 VO",
      "     * @return void",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public void delete${2:Name}(${2:Name}VO vo) throws Exception {",
      "        ${6:daoName}.delete${2:Name}(vo);",
      "    }",
      "",
      "    /**",
      "     * ${2:Name}을 조회한다.",
      "     * @param vo - 조회할 정보가 담긴 VO",
      "     * @return 조회한 ${2:Name}",
      "     * @exception Exception",
      "     */",
      "    @Override",
      "    public ${2:Name}VO select${2:Name}(${2:Name}VO vo) throws Exception {",
      "        ${2:Name}VO resultVO = ${6:daoName}.select${2:Name}(vo);",
      "        if (resultVO == null) {",
      "            throw processException(\"info.nodata.msg\");",
      "        }",
      "        return resultVO;",
      "    }",
      "    ${0}",
      "}"
    ],
    "description": "Create an eGovFrame ServiceImpl class"
  }
} 